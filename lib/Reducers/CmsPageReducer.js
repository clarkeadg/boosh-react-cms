'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INITIAL_STATE = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _ACTION_HANDLERS;

var _Types = require('../Actions/Types');

var _Types2 = _interopRequireDefault(_Types);

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _reduxsauce = require('reduxsauce');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INITIAL_STATE = exports.INITIAL_STATE = (0, _seamlessImmutable2.default)({
  entities: {},
  result: [],
  errorCode: null,
  attempting: false
});

// request
var attempt = function attempt(state, action) {
  return state.merge({ attempting: true });
};

// recieve
var success = function success(state, action) {
  return state.merge({
    attempting: false,
    errorCode: null,
    entities: state.entities.merge(action.payload.entities.pages),
    result: action.payload.result
  });
};

// fail
var failure = function failure(state, action) {
  return state.merge({ attempting: false, errorCode: action.errorCode });
};

// map our types to our handlers
var ACTION_HANDLERS = (_ACTION_HANDLERS = {}, (0, _defineProperty3.default)(_ACTION_HANDLERS, _Types2.default.GET_CMS_PAGE_REQUEST, attempt), (0, _defineProperty3.default)(_ACTION_HANDLERS, _Types2.default.GET_CMS_PAGE_SUCCESS, success), (0, _defineProperty3.default)(_ACTION_HANDLERS, _Types2.default.GET_CMS_PAGE_FAILURE, failure), _ACTION_HANDLERS);

exports.default = (0, _reduxsauce.createReducer)(INITIAL_STATE, ACTION_HANDLERS);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9SZWR1Y2Vycy9DbXNQYWdlUmVkdWNlci5qcyJdLCJuYW1lcyI6WyJJTklUSUFMX1NUQVRFIiwiZW50aXRpZXMiLCJyZXN1bHQiLCJlcnJvckNvZGUiLCJhdHRlbXB0aW5nIiwiYXR0ZW1wdCIsInN0YXRlIiwiYWN0aW9uIiwibWVyZ2UiLCJzdWNjZXNzIiwicGF5bG9hZCIsInBhZ2VzIiwiZmFpbHVyZSIsIkFDVElPTl9IQU5ETEVSUyIsIkdFVF9DTVNfUEFHRV9SRVFVRVNUIiwiR0VUX0NNU19QQUdFX1NVQ0NFU1MiLCJHRVRfQ01TX1BBR0VfRkFJTFVSRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVPLElBQU1BLHdDQUFnQixpQ0FBVTtBQUNyQ0MsWUFBVSxFQUQyQjtBQUVyQ0MsVUFBUSxFQUY2QjtBQUdyQ0MsYUFBVyxJQUgwQjtBQUlyQ0MsY0FBWTtBQUp5QixDQUFWLENBQXRCOztBQU9QO0FBQ0EsSUFBTUMsVUFBVSxTQUFWQSxPQUFVLENBQUNDLEtBQUQsRUFBUUMsTUFBUjtBQUFBLFNBQ2RELE1BQU1FLEtBQU4sQ0FBWSxFQUFFSixZQUFZLElBQWQsRUFBWixDQURjO0FBQUEsQ0FBaEI7O0FBR0E7QUFDQSxJQUFNSyxVQUFVLFNBQVZBLE9BQVUsQ0FBQ0gsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ2pDLFNBQU9ELE1BQU1FLEtBQU4sQ0FBWTtBQUNqQkosZ0JBQVksS0FESztBQUVqQkQsZUFBVyxJQUZNO0FBR2pCRixjQUFVSyxNQUFNTCxRQUFOLENBQWVPLEtBQWYsQ0FBcUJELE9BQU9HLE9BQVAsQ0FBZVQsUUFBZixDQUF3QlUsS0FBN0MsQ0FITztBQUlqQlQsWUFBUUssT0FBT0csT0FBUCxDQUFlUjtBQUpOLEdBQVosQ0FBUDtBQU1ELENBUEQ7O0FBU0E7QUFDQSxJQUFNVSxVQUFVLFNBQVZBLE9BQVUsQ0FBQ04sS0FBRCxFQUFRQyxNQUFSO0FBQUEsU0FDZEQsTUFBTUUsS0FBTixDQUFZLEVBQUVKLFlBQVksS0FBZCxFQUFxQkQsV0FBV0ksT0FBT0osU0FBdkMsRUFBWixDQURjO0FBQUEsQ0FBaEI7O0FBR0E7QUFDQSxJQUFNVSwwRkFDSCxnQkFBTUMsb0JBREgsRUFDMEJULE9BRDFCLG1EQUVILGdCQUFNVSxvQkFGSCxFQUUwQk4sT0FGMUIsbURBR0gsZ0JBQU1PLG9CQUhILEVBRzBCSixPQUgxQixvQkFBTjs7a0JBTWUsK0JBQWNaLGFBQWQsRUFBNkJhLGVBQTdCLEMiLCJmaWxlIjoiQ21zUGFnZVJlZHVjZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHlwZXMgZnJvbSAnLi4vQWN0aW9ucy9UeXBlcydcbmltcG9ydCBJbW11dGFibGUgZnJvbSAnc2VhbWxlc3MtaW1tdXRhYmxlJ1xuaW1wb3J0IHsgY3JlYXRlUmVkdWNlciB9IGZyb20gJ3JlZHV4c2F1Y2UnXG5cbmV4cG9ydCBjb25zdCBJTklUSUFMX1NUQVRFID0gSW1tdXRhYmxlKHtcbiAgZW50aXRpZXM6IHt9LFxuICByZXN1bHQ6IFtdLFxuICBlcnJvckNvZGU6IG51bGwsXG4gIGF0dGVtcHRpbmc6IGZhbHNlXG59KVxuXG4vLyByZXF1ZXN0XG5jb25zdCBhdHRlbXB0ID0gKHN0YXRlLCBhY3Rpb24pID0+XG4gIHN0YXRlLm1lcmdlKHsgYXR0ZW1wdGluZzogdHJ1ZSB9KVxuXG4vLyByZWNpZXZlXG5jb25zdCBzdWNjZXNzID0gKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgcmV0dXJuIHN0YXRlLm1lcmdlKHtcbiAgICBhdHRlbXB0aW5nOiBmYWxzZSxcbiAgICBlcnJvckNvZGU6IG51bGwsXG4gICAgZW50aXRpZXM6IHN0YXRlLmVudGl0aWVzLm1lcmdlKGFjdGlvbi5wYXlsb2FkLmVudGl0aWVzLnBhZ2VzKSxcbiAgICByZXN1bHQ6IGFjdGlvbi5wYXlsb2FkLnJlc3VsdFxuICB9KVxufVxuXG4vLyBmYWlsXG5jb25zdCBmYWlsdXJlID0gKHN0YXRlLCBhY3Rpb24pID0+XG4gIHN0YXRlLm1lcmdlKHsgYXR0ZW1wdGluZzogZmFsc2UsIGVycm9yQ29kZTogYWN0aW9uLmVycm9yQ29kZSB9KVxuXG4vLyBtYXAgb3VyIHR5cGVzIHRvIG91ciBoYW5kbGVyc1xuY29uc3QgQUNUSU9OX0hBTkRMRVJTID0ge1xuICBbVHlwZXMuR0VUX0NNU19QQUdFX1JFUVVFU1RdOiBhdHRlbXB0LFxuICBbVHlwZXMuR0VUX0NNU19QQUdFX1NVQ0NFU1NdOiBzdWNjZXNzLFxuICBbVHlwZXMuR0VUX0NNU19QQUdFX0ZBSUxVUkVdOiBmYWlsdXJlXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVJlZHVjZXIoSU5JVElBTF9TVEFURSwgQUNUSU9OX0hBTkRMRVJTKVxuIl19